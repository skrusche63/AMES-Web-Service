package de.kp.ames.web.core.malware;
/**
 *	Copyright 2012 Dr. Krusche & Partner PartG
 *
 *	AMES-Web-Service is free software: you can redistribute it and/or 
 *	modify it under the terms of the GNU General Public License 
 *	as published by the Free Software Foundation, either version 3 of 
 *	the License, or (at your option) any later version.
 *
 *	AMES- Web-Service is distributed in the hope that it will be useful,
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * 
 *  See the GNU General Public License for more details. 
 *
 *	You should have received a copy of the GNU General Public License
 *	along with this software. If not, see <http://www.gnu.org/licenses/>.
 *
 */

import de.kp.ames.web.Bundle;
import de.kp.ames.web.GlobalConstants;

public class MalwareScanner {

	private static Boolean MALWARE_SCAN;
	
	private static String CLAMAV_DAEMON_HOST;

	private static int CLAMAV_DAEMON_PORT;
	private static int CLAMAV_DAEMON_TIMEOUT;

	/*
	 * initialize constants
	 */
	static {
		
		Bundle bundle = Bundle.getInstance();
		
		/*
		 * Malware check
		 */
		String flag = bundle.getString(GlobalConstants.MALWARE_SCAN);
		MALWARE_SCAN = Boolean.parseBoolean(flag);
		
		if (MALWARE_SCAN == true) {
		
			/*
			 * Daemon host
			 */
			String host = bundle.getString(GlobalConstants.MALWARE_DAEMON_HOST);
			CLAMAV_DAEMON_HOST = host;
			
			/*
			 * Daemon port
			 */
			String port = bundle.getString(GlobalConstants.MALWARE_DAEMON_PORT);
			CLAMAV_DAEMON_PORT = Integer.parseInt(port);
			
			/*
			 * Daemon timeout
			 */
			String timeout = bundle.getString(GlobalConstants.MALWARE_DAEMON_TIMEOUT);
			CLAMAV_DAEMON_TIMEOUT = Integer.parseInt(timeout);
	
		}
		
	}
	
	public static boolean scanForViruses(byte[] bytes) {
		
		if (MALWARE_SCAN == false) return true;
		
		/* 
		 * This method invokes the clamav daemon
		 */
		ClamAVClient scanner = new ClamAVClient(CLAMAV_DAEMON_HOST, CLAMAV_DAEMON_PORT, CLAMAV_DAEMON_TIMEOUT);
		
		/* 
		 * Next ping the clamav daemon, to see whether the
		 * respective process is up
		 */
		// 
		boolean alive = scanner.ping();
		if (alive == false) return false;
		
		/* 
		 * Scan byte array and return result
		 */
		ScanResult result = scanner.scan(bytes);
		return (result.getStatus().equals(ScanResult.Status.PASSED)) ? true: false;
		
	}

}
